type token =
  | EOF
  | BLOCK_1_1 of (char)
  | EXPR1_10_1 of (char)
  | EXPR1_12_1 of (char)
  | EXPR1_14_1 of (char)
  | EXPR1_19_1 of (char)
  | EXPR1_19_3 of (char)
  | EXPR1_21_1 of (char)
  | EXPR1_22_1 of (char)
  | EXPR1_6_0 of (char)
  | EXPR1_7_1 of (char)
  | EXPR1_8_1 of (char)
  | EXPR1_9_1 of (char)
  | IDENT_LIST_1_1_0_0_0 of (char)
  | IDENTS_0_0 of (char)
  | IDENTS_0_2 of (char)
  | LAMBDA1_0_4 of (char)
  | LAMBDA1_0_5 of (char)
  | LAMBDA1_0_7 of (char)
  | STMT_2_1 of (char)
  | NUMBER of (float)
  | EXPR1_11_1 of (string)
  | EXPR1_13_1 of (string)
  | EXPR1_15_1 of (string)
  | EXPR1_16_1 of (string)
  | EXPR1_17_1 of (string)
  | EXPR1_18_1 of (string)
  | EXPR1_20_0 of (string)
  | EXPR1_20_2 of (string)
  | IDENT1 of (string)
  | SEXP2_1_1 of (string)
  | SEXP2_2_1 of (string)
  | SEXP2_3_1 of (string)
  | START_1_0 of (string)
  | START_2_0 of (string)
  | STRING of (string)
  | VALUE1_1_0 of (string)
  | VALUE1_2_0 of (string)
  | BLANKS
  | CONST_KW
  | FALSE_KW
  | FUNC_KW
  | LET_KW
  | MULTI_LINE_COMMENT
  | RET_KW
  | SINGLE_LINE_COMMENT
  | TRUE_KW
  | UNDEF_KW

open Parsing;;
let _ = parse_error;;
# 9 "javascript_parser.mly"
   open Javascript_ast;;
# 56 "javascript_parser.ml"
let yytransl_const = [|
    0 (* EOF *);
  294 (* BLANKS *);
  295 (* CONST_KW *);
  296 (* FALSE_KW *);
  297 (* FUNC_KW *);
  298 (* LET_KW *);
  299 (* MULTI_LINE_COMMENT *);
  300 (* RET_KW *);
  301 (* SINGLE_LINE_COMMENT *);
  302 (* TRUE_KW *);
  303 (* UNDEF_KW *);
    0|]

let yytransl_block = [|
  257 (* BLOCK_1_1 *);
  258 (* EXPR1_10_1 *);
  259 (* EXPR1_12_1 *);
  260 (* EXPR1_14_1 *);
  261 (* EXPR1_19_1 *);
  262 (* EXPR1_19_3 *);
  263 (* EXPR1_21_1 *);
  264 (* EXPR1_22_1 *);
  265 (* EXPR1_6_0 *);
  266 (* EXPR1_7_1 *);
  267 (* EXPR1_8_1 *);
  268 (* EXPR1_9_1 *);
  269 (* IDENT_LIST_1_1_0_0_0 *);
  270 (* IDENTS_0_0 *);
  271 (* IDENTS_0_2 *);
  272 (* LAMBDA1_0_4 *);
  273 (* LAMBDA1_0_5 *);
  274 (* LAMBDA1_0_7 *);
  275 (* STMT_2_1 *);
  276 (* NUMBER *);
  277 (* EXPR1_11_1 *);
  278 (* EXPR1_13_1 *);
  279 (* EXPR1_15_1 *);
  280 (* EXPR1_16_1 *);
  281 (* EXPR1_17_1 *);
  282 (* EXPR1_18_1 *);
  283 (* EXPR1_20_0 *);
  284 (* EXPR1_20_2 *);
  285 (* IDENT1 *);
  286 (* SEXP2_1_1 *);
  287 (* SEXP2_2_1 *);
  288 (* SEXP2_3_1 *);
  289 (* START_1_0 *);
  290 (* START_2_0 *);
  291 (* STRING *);
  292 (* VALUE1_1_0 *);
  293 (* VALUE1_2_0 *);
    0|]

let yylhs = "\255\255\
\001\000\002\000\002\000\002\000\004\000\006\000\006\000\006\000\
\008\000\009\000\009\000\005\000\011\000\012\000\013\000\013\000\
\015\000\016\000\014\000\018\000\019\000\021\000\021\000\020\000\
\022\000\022\000\022\000\022\000\003\000\024\000\024\000\025\000\
\026\000\026\000\026\000\023\000\027\000\027\000\027\000\027\000\
\027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
\027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
\027\000\027\000\027\000\027\000\027\000\007\000\032\000\032\000\
\032\000\032\000\032\000\029\000\034\000\035\000\036\000\036\000\
\028\000\037\000\037\000\031\000\038\000\038\000\040\000\041\000\
\041\000\042\000\043\000\030\000\044\000\044\000\045\000\046\000\
\046\000\047\000\048\000\017\000\049\000\049\000\050\000\051\000\
\051\000\052\000\053\000\039\000\054\000\033\000\055\000\055\000\
\010\000\000\000"

let yylen = "\002\000\
\001\000\002\000\003\000\003\000\001\000\001\000\001\000\003\000\
\001\000\001\000\002\000\001\000\001\000\001\000\001\000\002\000\
\001\000\003\000\001\000\007\000\001\000\001\000\001\000\001\000\
\001\000\004\000\004\000\004\000\001\000\001\000\003\000\001\000\
\004\000\004\000\003\000\001\000\001\000\001\000\001\000\003\000\
\001\000\002\000\002\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\005\000\
\006\000\004\000\003\000\003\000\003\000\001\000\001\000\001\000\
\001\000\001\000\001\000\001\000\008\000\001\000\001\000\001\000\
\001\000\002\000\003\000\001\000\001\000\002\000\001\000\001\000\
\002\000\001\000\002\000\001\000\001\000\002\000\001\000\001\000\
\002\000\001\000\002\000\001\000\001\000\002\000\001\000\001\000\
\002\000\001\000\002\000\001\000\003\000\001\000\001\000\001\000\
\000\000\002\000"

let yydefred = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\063\000\000\000\
\037\000\000\000\105\000\067\000\064\000\065\000\000\000\104\000\
\000\000\000\000\103\000\038\000\106\000\001\000\000\000\039\000\
\000\000\029\000\000\000\032\000\000\000\041\000\062\000\066\000\
\068\000\102\000\000\000\000\000\000\000\000\000\000\000\077\000\
\000\000\000\000\000\000\000\000\073\000\076\000\105\000\100\000\
\000\000\105\000\006\000\000\000\005\000\007\000\000\000\015\000\
\012\000\013\000\000\000\000\000\072\000\071\000\000\000\070\000\
\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\061\000\000\000\074\000\000\000\040\000\
\060\000\080\000\078\000\000\000\000\000\000\000\000\000\010\000\
\003\000\004\000\000\000\016\000\000\000\017\000\019\000\000\000\
\000\000\000\000\035\000\031\000\000\000\000\000\000\000\000\000\
\085\000\105\000\000\000\084\000\059\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\101\000\075\000\
\000\000\081\000\082\000\000\000\008\000\011\000\105\000\093\000\
\000\000\092\000\022\000\023\000\000\000\021\000\033\000\000\000\
\034\000\000\000\088\000\086\000\000\000\058\000\000\000\083\000\
\000\000\096\000\094\000\000\000\018\000\000\000\000\000\000\000\
\000\000\089\000\090\000\057\000\000\000\097\000\098\000\000\000\
\000\000\091\000\099\000\000\000\000\000\000\000\025\000\000\000\
\024\000\069\000\000\000\000\000\000\000\020\000\000\000\000\000\
\000\000\026\000\027\000\028\000"

let yydgoto = "\002\000\
\021\000\022\000\023\000\175\000\055\000\053\000\024\000\094\000\
\095\000\096\000\057\000\058\000\059\000\100\000\101\000\102\000\
\137\000\103\000\141\000\176\000\142\000\177\000\025\000\026\000\
\027\000\028\000\029\000\043\000\030\000\115\000\044\000\031\000\
\032\000\033\000\063\000\064\000\045\000\046\000\047\000\091\000\
\092\000\130\000\131\000\116\000\148\000\149\000\162\000\163\000\
\138\000\155\000\156\000\166\000\167\000\048\000\034\000"

let yysindex = "\014\000\
\021\255\000\000\106\255\106\255\106\255\152\255\000\000\010\255\
\000\000\177\255\000\000\000\000\000\000\000\000\253\254\000\000\
\000\255\004\255\000\000\000\000\000\000\000\000\037\000\000\000\
\020\255\000\000\039\255\000\000\021\002\000\000\000\000\000\000\
\000\000\000\000\017\255\177\001\017\255\038\255\106\255\000\000\
\020\255\044\255\028\255\029\255\000\000\000\000\000\000\000\000\
\023\255\000\000\000\000\049\000\000\000\000\000\059\000\000\000\
\000\000\000\000\051\255\047\255\000\000\000\000\062\255\000\000\
\052\255\000\000\106\255\131\001\106\255\106\255\106\255\106\255\
\106\255\043\255\106\255\106\255\106\255\106\255\106\255\106\255\
\106\255\106\255\106\255\000\000\106\255\000\000\201\255\000\000\
\000\000\000\000\000\000\060\255\067\255\059\255\177\255\000\000\
\000\000\000\000\048\255\000\000\051\255\000\000\000\000\106\255\
\048\255\106\255\000\000\000\000\024\255\002\255\002\255\202\001\
\000\000\000\000\064\255\000\000\000\000\017\255\017\255\024\255\
\002\255\002\255\142\001\142\001\070\002\046\002\000\000\000\000\
\054\255\000\000\000\000\106\255\000\000\000\000\000\000\000\000\
\061\255\000\000\000\000\000\000\071\255\000\000\000\000\073\255\
\000\000\106\255\000\000\000\000\094\255\000\000\038\255\000\000\
\227\001\000\000\000\000\096\255\000\000\076\255\095\255\021\002\
\106\255\000\000\000\000\000\000\085\255\000\000\000\000\081\255\
\201\255\000\000\000\000\061\001\099\255\232\254\000\000\061\001\
\000\000\000\000\131\001\106\255\106\255\000\000\102\255\104\255\
\105\255\000\000\000\000\000\000"

let yyrindex = "\000\000\
\000\000\000\000\000\000\000\000\000\000\107\255\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\062\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\002\000\000\000\000\000\000\000\116\001\000\000\000\000\000\000\
\000\000\000\000\001\000\000\000\027\000\252\001\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\122\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\108\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\109\255\000\000\000\000\112\255\000\000\
\000\000\000\000\114\255\000\000\101\255\000\000\000\000\000\000\
\108\255\000\000\000\000\000\000\105\000\157\000\183\000\000\000\
\000\000\000\000\000\000\000\000\000\000\053\000\079\000\131\000\
\209\000\235\000\008\001\034\001\060\001\086\001\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\116\255\000\000\000\000\000\000\
\000\000\000\000\000\000\027\255\000\000\000\000\000\000\112\001\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\009\001\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000"

let yygindex = "\000\000\
\000\000\000\000\211\255\007\000\000\000\000\000\251\255\000\000\
\000\000\005\000\000\000\000\000\000\000\000\000\035\000\000\000\
\032\000\000\000\000\000\218\255\000\000\000\000\253\255\071\000\
\250\255\000\000\016\000\231\255\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\058\000\000\000\020\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000"

let yytablesize = 862
let yytable = "\042\000\
\042\000\030\000\041\000\069\000\054\000\179\000\180\000\181\000\
\073\000\074\000\040\000\075\000\076\000\077\000\001\000\056\000\
\052\000\049\000\035\000\036\000\037\000\062\000\003\000\073\000\
\074\000\060\000\043\000\004\000\061\000\005\000\073\000\074\000\
\065\000\075\000\076\000\086\000\066\000\006\000\067\000\068\000\
\007\000\095\000\095\000\085\000\087\000\088\000\089\000\008\000\
\097\000\009\000\093\000\090\000\044\000\010\000\011\000\012\000\
\013\000\014\000\098\000\015\000\016\000\017\000\018\000\107\000\
\099\000\104\000\019\000\020\000\105\000\114\000\106\000\117\000\
\129\000\132\000\133\000\157\000\135\000\113\000\045\000\150\000\
\042\000\127\000\151\000\041\000\109\000\110\000\111\000\112\000\
\159\000\054\000\118\000\119\000\120\000\121\000\122\000\123\000\
\124\000\125\000\126\000\158\000\143\000\134\000\145\000\136\000\
\047\000\139\000\161\000\003\000\165\000\136\000\168\000\169\000\
\004\000\171\000\005\000\172\000\178\000\186\000\147\000\187\000\
\188\000\014\000\006\000\105\000\105\000\007\000\079\000\009\000\
\105\000\105\000\046\000\087\000\008\000\183\000\009\000\140\000\
\144\000\182\000\108\000\154\000\012\000\013\000\014\000\173\000\
\128\000\016\000\017\000\153\000\152\000\000\000\000\000\019\000\
\020\000\003\000\000\000\000\000\049\000\170\000\004\000\000\000\
\005\000\160\000\042\000\000\000\000\000\041\000\054\000\000\000\
\006\000\000\000\054\000\007\000\000\000\000\000\000\000\000\000\
\184\000\185\000\008\000\000\000\038\000\000\000\051\000\050\000\
\000\000\000\000\012\000\013\000\014\000\000\000\015\000\016\000\
\017\000\018\000\000\000\039\000\007\000\019\000\020\000\000\000\
\000\000\000\000\003\000\000\000\000\000\051\000\000\000\004\000\
\048\000\005\000\000\000\012\000\013\000\014\000\000\000\000\000\
\016\000\006\000\000\000\000\000\007\000\000\000\019\000\000\000\
\000\000\000\000\000\000\008\000\000\000\009\000\000\000\000\000\
\000\000\000\000\050\000\012\000\013\000\014\000\000\000\015\000\
\016\000\017\000\018\000\000\000\039\000\000\000\019\000\020\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\042\000\042\000\042\000\042\000\042\000\042\000\052\000\
\000\000\000\000\042\000\042\000\042\000\042\000\000\000\000\000\
\042\000\030\000\042\000\042\000\000\000\042\000\042\000\042\000\
\042\000\042\000\042\000\043\000\043\000\043\000\043\000\043\000\
\043\000\053\000\000\000\000\000\043\000\043\000\043\000\043\000\
\000\000\000\000\043\000\000\000\043\000\043\000\000\000\043\000\
\043\000\043\000\043\000\043\000\043\000\044\000\044\000\044\000\
\044\000\044\000\044\000\054\000\000\000\000\000\044\000\044\000\
\044\000\044\000\000\000\000\000\044\000\000\000\044\000\044\000\
\000\000\044\000\044\000\044\000\044\000\044\000\044\000\045\000\
\045\000\045\000\045\000\045\000\045\000\055\000\000\000\000\000\
\045\000\045\000\045\000\045\000\000\000\000\000\045\000\000\000\
\045\000\045\000\000\000\045\000\045\000\045\000\045\000\045\000\
\045\000\047\000\047\000\047\000\047\000\047\000\047\000\056\000\
\000\000\000\000\000\000\036\000\047\000\047\000\000\000\000\000\
\047\000\000\000\047\000\047\000\000\000\047\000\047\000\047\000\
\047\000\047\000\047\000\046\000\046\000\046\000\046\000\046\000\
\046\000\000\000\000\000\000\000\000\000\000\000\046\000\046\000\
\000\000\000\000\046\000\000\000\046\000\046\000\000\000\046\000\
\046\000\046\000\046\000\046\000\046\000\049\000\000\000\049\000\
\049\000\049\000\049\000\000\000\000\000\000\000\000\000\000\000\
\000\000\049\000\000\000\000\000\049\000\000\000\049\000\049\000\
\000\000\049\000\049\000\049\000\049\000\049\000\049\000\051\000\
\000\000\051\000\051\000\051\000\051\000\000\000\000\000\000\000\
\000\000\000\000\000\000\051\000\000\000\000\000\051\000\000\000\
\051\000\051\000\000\000\051\000\051\000\051\000\051\000\051\000\
\051\000\048\000\000\000\048\000\048\000\048\000\048\000\000\000\
\000\000\000\000\000\000\000\000\000\000\048\000\000\000\000\000\
\048\000\000\000\048\000\048\000\000\000\048\000\048\000\048\000\
\048\000\048\000\048\000\050\000\000\000\050\000\050\000\050\000\
\050\000\000\000\000\000\000\000\000\000\000\000\000\000\050\000\
\000\000\000\000\050\000\000\000\050\000\050\000\000\000\050\000\
\050\000\050\000\050\000\050\000\050\000\000\000\000\000\000\000\
\052\000\000\000\000\000\000\000\052\000\052\000\000\000\105\000\
\000\000\000\000\000\000\000\000\052\000\000\000\000\000\052\000\
\105\000\052\000\052\000\000\000\105\000\000\000\052\000\052\000\
\052\000\052\000\053\000\000\000\000\000\105\000\053\000\053\000\
\000\000\000\000\000\000\105\000\105\000\105\000\053\000\000\000\
\105\000\053\000\000\000\053\000\053\000\000\000\105\000\000\000\
\053\000\053\000\053\000\053\000\054\000\000\000\000\000\000\000\
\054\000\054\000\000\000\174\000\000\000\000\000\000\000\000\000\
\054\000\000\000\000\000\054\000\000\000\054\000\054\000\000\000\
\007\000\000\000\000\000\000\000\054\000\054\000\055\000\000\000\
\000\000\051\000\055\000\055\000\000\000\000\000\000\000\012\000\
\013\000\014\000\055\000\000\000\016\000\055\000\000\000\055\000\
\055\000\000\000\019\000\000\000\000\000\000\000\000\000\055\000\
\056\000\000\000\000\000\000\000\036\000\056\000\000\000\000\000\
\000\000\000\000\000\000\000\000\056\000\000\000\000\000\056\000\
\036\000\056\000\056\000\036\000\003\000\036\000\036\000\000\000\
\000\000\004\000\000\000\005\000\000\000\000\000\000\000\069\000\
\070\000\071\000\000\000\006\000\073\000\074\000\007\000\075\000\
\076\000\077\000\000\000\000\000\000\000\008\000\000\000\009\000\
\000\000\000\000\078\000\079\000\000\000\012\000\013\000\014\000\
\000\000\015\000\016\000\017\000\018\000\000\000\000\000\000\000\
\019\000\020\000\069\000\070\000\071\000\072\000\000\000\073\000\
\074\000\000\000\075\000\076\000\077\000\000\000\000\000\000\000\
\084\000\000\000\000\000\000\000\000\000\078\000\079\000\080\000\
\081\000\082\000\083\000\069\000\070\000\071\000\072\000\146\000\
\073\000\074\000\000\000\075\000\076\000\077\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\078\000\079\000\
\080\000\081\000\082\000\083\000\069\000\070\000\071\000\072\000\
\000\000\073\000\074\000\000\000\075\000\076\000\077\000\000\000\
\000\000\000\000\164\000\000\000\000\000\000\000\000\000\078\000\
\079\000\080\000\081\000\082\000\083\000\037\000\037\000\037\000\
\037\000\000\000\037\000\037\000\000\000\037\000\037\000\037\000\
\000\000\000\000\000\000\000\000\000\000\000\000\037\000\000\000\
\037\000\037\000\037\000\037\000\037\000\037\000\069\000\070\000\
\071\000\072\000\000\000\073\000\074\000\000\000\075\000\076\000\
\077\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\078\000\079\000\080\000\081\000\082\000\083\000\069\000\
\070\000\071\000\000\000\000\000\073\000\074\000\000\000\075\000\
\076\000\077\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\078\000\079\000\080\000\081\000\082\000\069\000\
\070\000\071\000\000\000\000\000\073\000\074\000\000\000\075\000\
\076\000\077\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\078\000\079\000\080\000\081\000"

let yycheck = "\006\000\
\000\000\000\000\006\000\002\001\010\000\030\001\031\001\032\001\
\007\001\008\001\006\000\010\001\011\001\012\001\001\000\011\000\
\010\000\008\001\003\000\004\000\005\000\017\000\002\001\007\001\
\008\001\029\001\000\000\007\001\029\001\009\001\007\001\008\001\
\029\001\010\001\011\001\039\000\000\000\017\001\019\001\001\001\
\020\001\015\001\016\001\006\001\001\001\018\001\018\001\027\001\
\000\000\029\001\028\001\047\000\000\000\033\001\034\001\035\001\
\036\001\037\001\000\000\039\001\040\001\041\001\042\001\067\000\
\014\001\019\001\046\001\047\001\007\001\073\000\019\001\029\001\
\013\001\007\001\016\001\015\001\029\001\073\000\000\000\016\001\
\087\000\085\000\029\001\087\000\069\000\070\000\071\000\072\000\
\016\001\095\000\075\000\076\000\077\000\078\000\079\000\080\000\
\081\000\082\000\083\000\029\001\104\000\095\000\106\000\099\000\
\000\000\101\000\013\001\002\001\013\001\105\000\035\001\017\001\
\007\001\029\001\009\001\035\001\018\001\016\001\114\000\016\001\
\016\001\000\000\017\001\016\001\018\001\020\001\018\001\016\001\
\015\001\029\001\000\000\016\001\027\001\179\000\029\001\101\000\
\105\000\176\000\068\000\135\000\035\001\036\001\037\001\169\000\
\087\000\040\001\041\001\132\000\129\000\255\255\255\255\046\001\
\047\001\002\001\255\255\255\255\000\000\161\000\007\001\255\255\
\009\001\146\000\169\000\255\255\255\255\169\000\172\000\255\255\
\017\001\255\255\176\000\020\001\255\255\255\255\255\255\255\255\
\180\000\181\000\027\001\255\255\029\001\255\255\000\000\007\001\
\255\255\255\255\035\001\036\001\037\001\255\255\039\001\040\001\
\041\001\042\001\255\255\044\001\020\001\046\001\047\001\255\255\
\255\255\255\255\002\001\255\255\255\255\029\001\255\255\007\001\
\000\000\009\001\255\255\035\001\036\001\037\001\255\255\255\255\
\040\001\017\001\255\255\255\255\020\001\255\255\046\001\255\255\
\255\255\255\255\255\255\027\001\255\255\029\001\255\255\255\255\
\255\255\255\255\000\000\035\001\036\001\037\001\255\255\039\001\
\040\001\041\001\042\001\255\255\044\001\255\255\046\001\047\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\001\001\002\001\003\001\004\001\005\001\006\001\000\000\
\255\255\255\255\010\001\011\001\012\001\013\001\255\255\255\255\
\016\001\016\001\018\001\019\001\255\255\021\001\022\001\023\001\
\024\001\025\001\026\001\001\001\002\001\003\001\004\001\005\001\
\006\001\000\000\255\255\255\255\010\001\011\001\012\001\013\001\
\255\255\255\255\016\001\255\255\018\001\019\001\255\255\021\001\
\022\001\023\001\024\001\025\001\026\001\001\001\002\001\003\001\
\004\001\005\001\006\001\000\000\255\255\255\255\010\001\011\001\
\012\001\013\001\255\255\255\255\016\001\255\255\018\001\019\001\
\255\255\021\001\022\001\023\001\024\001\025\001\026\001\001\001\
\002\001\003\001\004\001\005\001\006\001\000\000\255\255\255\255\
\010\001\011\001\012\001\013\001\255\255\255\255\016\001\255\255\
\018\001\019\001\255\255\021\001\022\001\023\001\024\001\025\001\
\026\001\001\001\002\001\003\001\004\001\005\001\006\001\000\000\
\255\255\255\255\255\255\000\000\012\001\013\001\255\255\255\255\
\016\001\255\255\018\001\019\001\255\255\021\001\022\001\023\001\
\024\001\025\001\026\001\001\001\002\001\003\001\004\001\005\001\
\006\001\255\255\255\255\255\255\255\255\255\255\012\001\013\001\
\255\255\255\255\016\001\255\255\018\001\019\001\255\255\021\001\
\022\001\023\001\024\001\025\001\026\001\001\001\255\255\003\001\
\004\001\005\001\006\001\255\255\255\255\255\255\255\255\255\255\
\255\255\013\001\255\255\255\255\016\001\255\255\018\001\019\001\
\255\255\021\001\022\001\023\001\024\001\025\001\026\001\001\001\
\255\255\003\001\004\001\005\001\006\001\255\255\255\255\255\255\
\255\255\255\255\255\255\013\001\255\255\255\255\016\001\255\255\
\018\001\019\001\255\255\021\001\022\001\023\001\024\001\025\001\
\026\001\001\001\255\255\003\001\004\001\005\001\006\001\255\255\
\255\255\255\255\255\255\255\255\255\255\013\001\255\255\255\255\
\016\001\255\255\018\001\019\001\255\255\021\001\022\001\023\001\
\024\001\025\001\026\001\001\001\255\255\003\001\004\001\005\001\
\006\001\255\255\255\255\255\255\255\255\255\255\255\255\013\001\
\255\255\255\255\016\001\255\255\018\001\019\001\255\255\021\001\
\022\001\023\001\024\001\025\001\026\001\255\255\255\255\255\255\
\001\001\255\255\255\255\255\255\005\001\006\001\255\255\007\001\
\255\255\255\255\255\255\255\255\013\001\255\255\255\255\016\001\
\016\001\018\001\019\001\255\255\020\001\255\255\023\001\024\001\
\025\001\026\001\001\001\255\255\255\255\029\001\005\001\006\001\
\255\255\255\255\255\255\035\001\036\001\037\001\013\001\255\255\
\040\001\016\001\255\255\018\001\019\001\255\255\046\001\255\255\
\023\001\024\001\025\001\026\001\001\001\255\255\255\255\255\255\
\005\001\006\001\255\255\007\001\255\255\255\255\255\255\255\255\
\013\001\255\255\255\255\016\001\255\255\018\001\019\001\255\255\
\020\001\255\255\255\255\255\255\025\001\026\001\001\001\255\255\
\255\255\029\001\005\001\006\001\255\255\255\255\255\255\035\001\
\036\001\037\001\013\001\255\255\040\001\016\001\255\255\018\001\
\019\001\255\255\046\001\255\255\255\255\255\255\255\255\026\001\
\001\001\255\255\255\255\255\255\001\001\006\001\255\255\255\255\
\255\255\255\255\255\255\255\255\013\001\255\255\255\255\016\001\
\013\001\018\001\019\001\016\001\002\001\018\001\019\001\255\255\
\255\255\007\001\255\255\009\001\255\255\255\255\255\255\002\001\
\003\001\004\001\255\255\017\001\007\001\008\001\020\001\010\001\
\011\001\012\001\255\255\255\255\255\255\027\001\255\255\029\001\
\255\255\255\255\021\001\022\001\255\255\035\001\036\001\037\001\
\255\255\039\001\040\001\041\001\042\001\255\255\255\255\255\255\
\046\001\047\001\002\001\003\001\004\001\005\001\255\255\007\001\
\008\001\255\255\010\001\011\001\012\001\255\255\255\255\255\255\
\016\001\255\255\255\255\255\255\255\255\021\001\022\001\023\001\
\024\001\025\001\026\001\002\001\003\001\004\001\005\001\006\001\
\007\001\008\001\255\255\010\001\011\001\012\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\021\001\022\001\
\023\001\024\001\025\001\026\001\002\001\003\001\004\001\005\001\
\255\255\007\001\008\001\255\255\010\001\011\001\012\001\255\255\
\255\255\255\255\016\001\255\255\255\255\255\255\255\255\021\001\
\022\001\023\001\024\001\025\001\026\001\002\001\003\001\004\001\
\005\001\255\255\007\001\008\001\255\255\010\001\011\001\012\001\
\255\255\255\255\255\255\255\255\255\255\255\255\019\001\255\255\
\021\001\022\001\023\001\024\001\025\001\026\001\002\001\003\001\
\004\001\005\001\255\255\007\001\008\001\255\255\010\001\011\001\
\012\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\021\001\022\001\023\001\024\001\025\001\026\001\002\001\
\003\001\004\001\255\255\255\255\007\001\008\001\255\255\010\001\
\011\001\012\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\021\001\022\001\023\001\024\001\025\001\002\001\
\003\001\004\001\255\255\255\255\007\001\008\001\255\255\010\001\
\011\001\012\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\021\001\022\001\023\001\024\001"

let yynames_const = "\
  EOF\000\
  BLANKS\000\
  CONST_KW\000\
  FALSE_KW\000\
  FUNC_KW\000\
  LET_KW\000\
  MULTI_LINE_COMMENT\000\
  RET_KW\000\
  SINGLE_LINE_COMMENT\000\
  TRUE_KW\000\
  UNDEF_KW\000\
  "

let yynames_block = "\
  BLOCK_1_1\000\
  EXPR1_10_1\000\
  EXPR1_12_1\000\
  EXPR1_14_1\000\
  EXPR1_19_1\000\
  EXPR1_19_3\000\
  EXPR1_21_1\000\
  EXPR1_22_1\000\
  EXPR1_6_0\000\
  EXPR1_7_1\000\
  EXPR1_8_1\000\
  EXPR1_9_1\000\
  IDENT_LIST_1_1_0_0_0\000\
  IDENTS_0_0\000\
  IDENTS_0_2\000\
  LAMBDA1_0_4\000\
  LAMBDA1_0_5\000\
  LAMBDA1_0_7\000\
  STMT_2_1\000\
  NUMBER\000\
  EXPR1_11_1\000\
  EXPR1_13_1\000\
  EXPR1_15_1\000\
  EXPR1_16_1\000\
  EXPR1_17_1\000\
  EXPR1_18_1\000\
  EXPR1_20_0\000\
  EXPR1_20_2\000\
  IDENT1\000\
  SEXP2_1_1\000\
  SEXP2_2_1\000\
  SEXP2_3_1\000\
  START_1_0\000\
  START_2_0\000\
  STRING\000\
  VALUE1_1_0\000\
  VALUE1_2_0\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'startAux) in
    Obj.repr(
# 34 "javascript_parser.mly"
           (let x = _1 in ignore x; (x))
# 521 "javascript_parser.ml"
               : Javascript_ast.start_t))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'program) in
    Obj.repr(
# 38 "javascript_parser.mly"
              (let x = (_1) in ignore x; ((let (x_1) = x in JavascriptProgram(get_current_pos (),x_1))))
# 528 "javascript_parser.ml"
               : 'startAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'sexp1) in
    Obj.repr(
# 39 "javascript_parser.mly"
                      (let x = (_2) in ignore x; ((let (x_2) = x in SexpProgram(get_current_pos (),x_2))))
# 536 "javascript_parser.ml"
               : 'startAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'tests) in
    Obj.repr(
# 40 "javascript_parser.mly"
                      (let x = (_2) in ignore x; ((let (x_2) = x in TestProgram(get_current_pos (),(let (x_2_1) = x_2 in ((List.rev (List.rev_map (fun x_2_1 -> x_2_1) x_2_1))))))))
# 544 "javascript_parser.ml"
               : 'startAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'sexp1Aux) in
    Obj.repr(
# 44 "javascript_parser.mly"
           (let x = _1 in ignore x; (x))
# 551 "javascript_parser.ml"
               : 'sexp1))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 48 "javascript_parser.mly"
         ( IdentAtom(get_current_pos (), _1) )
# 558 "javascript_parser.ml"
               : 'sexp1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'value1) in
    Obj.repr(
# 49 "javascript_parser.mly"
         (
    let p = get_current_pos () in
    value_to_sexp_helper p _1 false
  )
# 568 "javascript_parser.ml"
               : 'sexp1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : char) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'sexp1_2_1) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : char) in
    Obj.repr(
# 53 "javascript_parser.mly"
                                   ( List(get_current_pos (), _2) )
# 577 "javascript_parser.ml"
               : 'sexp1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'sexp1_2_1Aux) in
    Obj.repr(
# 57 "javascript_parser.mly"
               (let x = _1 in ignore x; (List.rev x))
# 584 "javascript_parser.ml"
               : 'sexp1_2_1))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'Empty) in
    Obj.repr(
# 61 "javascript_parser.mly"
        ([])
# 591 "javascript_parser.ml"
               : 'sexp1_2_1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'sexp1_2_1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'sexp1) in
    Obj.repr(
# 62 "javascript_parser.mly"
                     (let x = _2 in (x)::_1)
# 599 "javascript_parser.ml"
               : 'sexp1_2_1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'testsAux) in
    Obj.repr(
# 66 "javascript_parser.mly"
           (let x = _1 in ignore x; (x))
# 606 "javascript_parser.ml"
               : 'tests))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'tests_0_0) in
    Obj.repr(
# 70 "javascript_parser.mly"
            ( List.flatten _1 )
# 613 "javascript_parser.ml"
               : 'testsAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'tests_0_0Aux) in
    Obj.repr(
# 74 "javascript_parser.mly"
               (let x = _1 in ignore x; (List.rev x))
# 620 "javascript_parser.ml"
               : 'tests_0_0))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'Empty) in
    Obj.repr(
# 78 "javascript_parser.mly"
        ([])
# 627 "javascript_parser.ml"
               : 'tests_0_0Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'tests_0_0Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'test) in
    Obj.repr(
# 79 "javascript_parser.mly"
                    (let x = _2 in (x)::_1)
# 635 "javascript_parser.ml"
               : 'tests_0_0Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'identsAux) in
    Obj.repr(
# 83 "javascript_parser.mly"
            (let x = _1 in ignore x; (x))
# 642 "javascript_parser.ml"
               : 'idents))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : char) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'ident_list) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : char) in
    Obj.repr(
# 87 "javascript_parser.mly"
                                   ( _2 )
# 651 "javascript_parser.ml"
               : 'identsAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'testAux) in
    Obj.repr(
# 91 "javascript_parser.mly"
          (let x = _1 in ignore x; (x))
# 658 "javascript_parser.ml"
               : 'test))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 6 : 'idents) in
    let _2 = (Parsing.peek_val __caml_parser_env 5 : 'test_0_1) in
    let _3 = (Parsing.peek_val __caml_parser_env 4 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _5 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _6 = (Parsing.peek_val __caml_parser_env 1 : 'sexp2) in
    let _7 = (Parsing.peek_val __caml_parser_env 0 : 'sexp2) in
    Obj.repr(
# 95 "javascript_parser.mly"
                                                   (
    let get_opt s = (match s with "" -> None | _ -> Some(s)) in
    let flags = (match _2 with
    | Some(l) -> List.fold_left (fun acc i -> StringSet.add i acc) StringSet.empty l
    | None -> StringSet.empty) in
    List.map (fun x -> (x,flags,_3,get_opt _4,get_opt _5,_6,_7)) _1
  )
# 677 "javascript_parser.ml"
               : 'testAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'test_0_1Aux) in
    Obj.repr(
# 105 "javascript_parser.mly"
              (let x = _1 in ignore x; (x))
# 684 "javascript_parser.ml"
               : 'test_0_1))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'Empty) in
    Obj.repr(
# 109 "javascript_parser.mly"
        (None)
# 691 "javascript_parser.ml"
               : 'test_0_1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'idents) in
    Obj.repr(
# 110 "javascript_parser.mly"
         (Some(_1))
# 698 "javascript_parser.ml"
               : 'test_0_1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'sexp2Aux) in
    Obj.repr(
# 114 "javascript_parser.mly"
           (let x = _1 in ignore x; (x))
# 705 "javascript_parser.ml"
               : 'sexp2))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'sexp1) in
    Obj.repr(
# 118 "javascript_parser.mly"
        ( _1 )
# 712 "javascript_parser.ml"
               : 'sexp2Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : char) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'program) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : char) in
    Obj.repr(
# 119 "javascript_parser.mly"
                                           ( program_to_sexp _3 )
# 722 "javascript_parser.ml"
               : 'sexp2Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : char) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'expr1) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : char) in
    Obj.repr(
# 120 "javascript_parser.mly"
                                         ( expr_to_sexp _3 )
# 732 "javascript_parser.ml"
               : 'sexp2Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : char) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'expr1) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : char) in
    Obj.repr(
# 121 "javascript_parser.mly"
                                         ( match _3 with
    | ValExpr(_,v) -> value_to_sexp v
    | UopExpr(p,NegUop,ValExpr(_,NumVal(n))) -> value_to_sexp (NumVal(-. n))
    | _ -> failwith "not a value" (* TODO XXX *)
  )
# 746 "javascript_parser.ml"
               : 'sexp2Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'programAux) in
    Obj.repr(
# 129 "javascript_parser.mly"
             (let x = _1 in ignore x; (x))
# 753 "javascript_parser.ml"
               : 'program))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expr1) in
    Obj.repr(
# 133 "javascript_parser.mly"
        (let x = (_1) in ignore x; ((let (x_1) = x in ExprProgram(get_current_pos (),x_1))))
# 760 "javascript_parser.ml"
               : 'programAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'stmt) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'programAux) in
    Obj.repr(
# 134 "javascript_parser.mly"
                            (let x = (_1,_3) in ignore x; ((let (x_1,x_3) = x in StmtProgram(get_current_pos (),x_1,x_3))))
# 769 "javascript_parser.ml"
               : 'programAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'stmtAux) in
    Obj.repr(
# 138 "javascript_parser.mly"
          (let x = _1 in ignore x; (x))
# 776 "javascript_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'expr1) in
    Obj.repr(
# 142 "javascript_parser.mly"
                                 ( ConstStmt(get_current_pos (), _2, _4) )
# 785 "javascript_parser.ml"
               : 'stmtAux))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'expr1) in
    Obj.repr(
# 143 "javascript_parser.mly"
                               ( LetStmt(get_current_pos (), _2, _4) )
# 794 "javascript_parser.ml"
               : 'stmtAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr1) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr1) in
    Obj.repr(
# 144 "javascript_parser.mly"
                       (let x = (_1,_3) in ignore x; ((let (x_1,x_3) = x in AssignStmt(get_current_pos (),x_1,x_3))))
# 803 "javascript_parser.ml"
               : 'stmtAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expr1Aux) in
    Obj.repr(
# 148 "javascript_parser.mly"
           (let x = _1 in ignore x; (x))
# 810 "javascript_parser.ml"
               : 'expr1))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 152 "javascript_parser.mly"
         ( VarExpr(get_current_pos (),_1) )
# 817 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    Obj.repr(
# 153 "javascript_parser.mly"
           ( ValExpr(get_current_pos (),UndefVal) )
# 823 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'value1) in
    Obj.repr(
# 154 "javascript_parser.mly"
         ( ValExpr(get_current_pos (),_1) )
# 830 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : char) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'block) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : char) in
    Obj.repr(
# 155 "javascript_parser.mly"
                                ( BlockExpr(get_current_pos (),_2) )
# 839 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'lambda1) in
    Obj.repr(
# 156 "javascript_parser.mly"
          ( FuncExpr(get_current_pos (), _1) )
# 846 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr1Aux) in
    Obj.repr(
# 157 "javascript_parser.mly"
                                        ( UopExpr(get_current_pos (),NegUop,_2) )
# 854 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr1Aux) in
    Obj.repr(
# 158 "javascript_parser.mly"
                     ( UopExpr(get_current_pos (),NotUop,_2) )
# 862 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr1Aux) in
    Obj.repr(
# 159 "javascript_parser.mly"
                              ( BopExpr(get_current_pos (),_1,TimesBop,_3) )
# 871 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr1Aux) in
    Obj.repr(
# 160 "javascript_parser.mly"
                              ( BopExpr(get_current_pos (),_1,DivBop,_3) )
# 880 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr1Aux) in
    Obj.repr(
# 161 "javascript_parser.mly"
                              ( BopExpr(get_current_pos (),_1,PlusBop,_3) )
# 889 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr1Aux) in
    Obj.repr(
# 162 "javascript_parser.mly"
                               ( BopExpr(get_current_pos (),_1,MinusBop,_3) )
# 898 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr1Aux) in
    Obj.repr(
# 163 "javascript_parser.mly"
                               ( BopExpr(get_current_pos (),_1,LteBop,_3) )
# 907 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr1Aux) in
    Obj.repr(
# 164 "javascript_parser.mly"
                               ( BopExpr(get_current_pos (),_1,LtBop,_3) )
# 916 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr1Aux) in
    Obj.repr(
# 165 "javascript_parser.mly"
                               ( BopExpr(get_current_pos (),_1,GteBop,_3) )
# 925 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr1Aux) in
    Obj.repr(
# 166 "javascript_parser.mly"
                               ( BopExpr(get_current_pos (),_1,GtBop,_3) )
# 934 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr1Aux) in
    Obj.repr(
# 167 "javascript_parser.mly"
                               ( BopExpr(get_current_pos (),_1,EqBop,_3) )
# 943 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr1Aux) in
    Obj.repr(
# 168 "javascript_parser.mly"
                               ( BopExpr(get_current_pos (),_1,NeqBop,_3) )
# 952 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr1Aux) in
    Obj.repr(
# 169 "javascript_parser.mly"
                               ( BopExpr(get_current_pos (),_1,AndBop,_3) )
# 961 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr1Aux) in
    Obj.repr(
# 170 "javascript_parser.mly"
                               ( BopExpr(get_current_pos (),_1,OrBop,_3) )
# 970 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : 'expr1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : char) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'expr1Aux) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'expr1Aux) in
    Obj.repr(
# 171 "javascript_parser.mly"
                                                   ( IfExpr(get_current_pos (),_1,_3,_5) )
# 981 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 4 : char) in
    let _3 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : char) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : 'expr1Aux) in
    let _6 = (Parsing.peek_val __caml_parser_env 0 : char) in
    Obj.repr(
# 172 "javascript_parser.mly"
                                                                   ( PrintExpr(get_current_pos (),_5) )
# 993 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : 'expr1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : char) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'expr_list) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : char) in
    Obj.repr(
# 173 "javascript_parser.mly"
                                            ( CallExpr(get_current_pos (), _1,_3) )
# 1003 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 174 "javascript_parser.mly"
                             ( FieldExpr(get_current_pos (),_1,_3) )
# 1012 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : char) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'field_list) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : char) in
    Obj.repr(
# 175 "javascript_parser.mly"
                                     ( ObjectExpr(get_current_pos (),_2) )
# 1021 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : char) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expr1Aux) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : char) in
    Obj.repr(
# 176 "javascript_parser.mly"
                                  ( _2 )
# 1030 "javascript_parser.ml"
               : 'expr1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'value1Aux) in
    Obj.repr(
# 180 "javascript_parser.mly"
            (let x = _1 in ignore x; (x))
# 1037 "javascript_parser.ml"
               : 'value1))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : float) in
    Obj.repr(
# 184 "javascript_parser.mly"
         ( NumVal(_1) )
# 1044 "javascript_parser.ml"
               : 'value1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 185 "javascript_parser.mly"
             ( NumVal(Float.nan) )
# 1051 "javascript_parser.ml"
               : 'value1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 186 "javascript_parser.mly"
             ( NumVal(Float.infinity) )
# 1058 "javascript_parser.ml"
               : 'value1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'bool) in
    Obj.repr(
# 187 "javascript_parser.mly"
       ( BoolVal(_1) )
# 1065 "javascript_parser.ml"
               : 'value1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 188 "javascript_parser.mly"
         ( StrVal(_1) )
# 1072 "javascript_parser.ml"
               : 'value1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'lambda1Aux) in
    Obj.repr(
# 192 "javascript_parser.mly"
             (let x = _1 in ignore x; (x))
# 1079 "javascript_parser.ml"
               : 'lambda1))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 6 : 'lambda1_0_1) in
    let _3 = (Parsing.peek_val __caml_parser_env 5 : char) in
    let _4 = (Parsing.peek_val __caml_parser_env 4 : 'ident_list) in
    let _5 = (Parsing.peek_val __caml_parser_env 3 : char) in
    let _6 = (Parsing.peek_val __caml_parser_env 2 : char) in
    let _7 = (Parsing.peek_val __caml_parser_env 1 : 'block) in
    let _8 = (Parsing.peek_val __caml_parser_env 0 : char) in
    Obj.repr(
# 196 "javascript_parser.mly"
                                                                                      ( (_2, List.map (fun v -> (v,None)) _4, _7, None) )
# 1092 "javascript_parser.ml"
               : 'lambda1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'lambda1_0_1Aux) in
    Obj.repr(
# 200 "javascript_parser.mly"
                 (let x = _1 in ignore x; (x))
# 1099 "javascript_parser.ml"
               : 'lambda1_0_1))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'Empty) in
    Obj.repr(
# 204 "javascript_parser.mly"
        (None)
# 1106 "javascript_parser.ml"
               : 'lambda1_0_1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 205 "javascript_parser.mly"
         (Some(_1))
# 1113 "javascript_parser.ml"
               : 'lambda1_0_1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'blockAux) in
    Obj.repr(
# 209 "javascript_parser.mly"
           (let x = _1 in ignore x; (x))
# 1120 "javascript_parser.ml"
               : 'block))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr1) in
    Obj.repr(
# 213 "javascript_parser.mly"
               (let x = (_2) in ignore x; ((let (x_2) = x in ReturnBlock(get_current_pos (),x_2))))
# 1127 "javascript_parser.ml"
               : 'blockAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'stmt) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'blockAux) in
    Obj.repr(
# 214 "javascript_parser.mly"
                          (let x = (_1,_3) in ignore x; ((let (x_1,x_3) = x in StmtBlock(get_current_pos (),x_1,x_3))))
# 1136 "javascript_parser.ml"
               : 'blockAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'field_listAux) in
    Obj.repr(
# 218 "javascript_parser.mly"
                (let x = _1 in ignore x; (x))
# 1143 "javascript_parser.ml"
               : 'field_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'Empty) in
    Obj.repr(
# 222 "javascript_parser.mly"
        ( [] )
# 1150 "javascript_parser.ml"
               : 'field_listAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'field) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'field_list_1_1) in
    Obj.repr(
# 223 "javascript_parser.mly"
                       ( _1::_2 )
# 1158 "javascript_parser.ml"
               : 'field_listAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'field_list_1_1Aux) in
    Obj.repr(
# 227 "javascript_parser.mly"
                    (let x = _1 in ignore x; (List.rev x))
# 1165 "javascript_parser.ml"
               : 'field_list_1_1))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'Empty) in
    Obj.repr(
# 231 "javascript_parser.mly"
        ([])
# 1172 "javascript_parser.ml"
               : 'field_list_1_1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'field_list_1_1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'field_list_1_1_0) in
    Obj.repr(
# 232 "javascript_parser.mly"
                                     (let x = _2 in (x)::_1)
# 1180 "javascript_parser.ml"
               : 'field_list_1_1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'field_list_1_1_0Aux) in
    Obj.repr(
# 236 "javascript_parser.mly"
                      (let x = _1 in ignore x; (x))
# 1187 "javascript_parser.ml"
               : 'field_list_1_1_0))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'field) in
    Obj.repr(
# 240 "javascript_parser.mly"
                             ( _2 )
# 1195 "javascript_parser.ml"
               : 'field_list_1_1_0Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expr_listAux) in
    Obj.repr(
# 244 "javascript_parser.mly"
               (let x = _1 in ignore x; (x))
# 1202 "javascript_parser.ml"
               : 'expr_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'Empty) in
    Obj.repr(
# 248 "javascript_parser.mly"
        ( [] )
# 1209 "javascript_parser.ml"
               : 'expr_listAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expr1) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr_list_1_1) in
    Obj.repr(
# 249 "javascript_parser.mly"
                      ( _1::_2 )
# 1217 "javascript_parser.ml"
               : 'expr_listAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expr_list_1_1Aux) in
    Obj.repr(
# 253 "javascript_parser.mly"
                   (let x = _1 in ignore x; (List.rev x))
# 1224 "javascript_parser.ml"
               : 'expr_list_1_1))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'Empty) in
    Obj.repr(
# 257 "javascript_parser.mly"
        ([])
# 1231 "javascript_parser.ml"
               : 'expr_list_1_1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expr_list_1_1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr_list_1_1_0) in
    Obj.repr(
# 258 "javascript_parser.mly"
                                   (let x = _2 in (x)::_1)
# 1239 "javascript_parser.ml"
               : 'expr_list_1_1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expr_list_1_1_0Aux) in
    Obj.repr(
# 262 "javascript_parser.mly"
                     (let x = _1 in ignore x; (x))
# 1246 "javascript_parser.ml"
               : 'expr_list_1_1_0))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr1) in
    Obj.repr(
# 266 "javascript_parser.mly"
                             ( _2 )
# 1254 "javascript_parser.ml"
               : 'expr_list_1_1_0Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'ident_listAux) in
    Obj.repr(
# 270 "javascript_parser.mly"
                (let x = _1 in ignore x; (x))
# 1261 "javascript_parser.ml"
               : 'ident_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'Empty) in
    Obj.repr(
# 274 "javascript_parser.mly"
        ( [] )
# 1268 "javascript_parser.ml"
               : 'ident_listAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'ident_list_1_1) in
    Obj.repr(
# 275 "javascript_parser.mly"
                        ( _1::_2 )
# 1276 "javascript_parser.ml"
               : 'ident_listAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'ident_list_1_1Aux) in
    Obj.repr(
# 279 "javascript_parser.mly"
                    (let x = _1 in ignore x; (List.rev x))
# 1283 "javascript_parser.ml"
               : 'ident_list_1_1))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'Empty) in
    Obj.repr(
# 283 "javascript_parser.mly"
        ([])
# 1290 "javascript_parser.ml"
               : 'ident_list_1_1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'ident_list_1_1Aux) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'ident_list_1_1_0) in
    Obj.repr(
# 284 "javascript_parser.mly"
                                     (let x = _2 in (x)::_1)
# 1298 "javascript_parser.ml"
               : 'ident_list_1_1Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'ident_list_1_1_0Aux) in
    Obj.repr(
# 288 "javascript_parser.mly"
                      (let x = _1 in ignore x; (x))
# 1305 "javascript_parser.ml"
               : 'ident_list_1_1_0))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 292 "javascript_parser.mly"
                              ( _2 )
# 1313 "javascript_parser.ml"
               : 'ident_list_1_1_0Aux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'fieldAux) in
    Obj.repr(
# 296 "javascript_parser.mly"
           (let x = _1 in ignore x; (x))
# 1320 "javascript_parser.ml"
               : 'field))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 1 : char) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr1) in
    Obj.repr(
# 300 "javascript_parser.mly"
                          ( (_1, _3) )
# 1329 "javascript_parser.ml"
               : 'fieldAux))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'boolAux) in
    Obj.repr(
# 304 "javascript_parser.mly"
          (let x = _1 in ignore x; (x))
# 1336 "javascript_parser.ml"
               : 'bool))
; (fun __caml_parser_env ->
    Obj.repr(
# 308 "javascript_parser.mly"
          ( true )
# 1342 "javascript_parser.ml"
               : 'boolAux))
; (fun __caml_parser_env ->
    Obj.repr(
# 309 "javascript_parser.mly"
           ( false )
# 1348 "javascript_parser.ml"
               : 'boolAux))
; (fun __caml_parser_env ->
    Obj.repr(
# 313 "javascript_parser.mly"
  ()
# 1354 "javascript_parser.ml"
               : 'Empty))
(* Entry start *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let start (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : Javascript_ast.start_t)
;;
# 317 "javascript_parser.mly"
(* footer code *)
# 1381 "javascript_parser.ml"
